name: Keep Supabase Alive

on:
  schedule:
    # Run every 6 days at 2:00 AM UTC
    - cron: '0 2 */6 * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  keep-alive:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Keep Supabase alive
        env:
          SUPABASE_URL: ${{ secrets.JEOPARDY_PUBLIC_SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.JEOPARDY_PUBLIC_SUPABASE_ANON_KEY }}
        run: |
          # Create a temporary heartbeat record and then delete it
          # This keeps the database active without affecting real data
          
          HEARTBEAT_ID=$(uuidgen)
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")
          
          echo "Sending heartbeat to Supabase..."
          
          # Insert a temporary record
          INSERT_RESPONSE=$(curl -s -X POST \
            "${SUPABASE_URL}/rest/v1/profiles" \
            -H "apikey: ${SUPABASE_ANON_KEY}" \
            -H "Authorization: Bearer ${SUPABASE_ANON_KEY}" \
            -H "Content-Type: application/json" \
            -H "Prefer: return=minimal" \
            -d "{
              \"id\": \"${HEARTBEAT_ID}\",
              \"username\": \"github-actions-heartbeat\",
              \"games_remaining\": 0,
              \"total_games_played\": 0,
              \"wins\": 0,
              \"losses\": 0
            }" \
            -w "%{http_code}")
          
          if [[ "$INSERT_RESPONSE" == *"201"* ]] || [[ "$INSERT_RESPONSE" == *"200"* ]]; then
            echo "Temporary record created successfully"
          else
            echo "Insert response: $INSERT_RESPONSE"
          fi
          
          # Wait a moment
          sleep 2
          
          # Delete the temporary record
          DELETE_RESPONSE=$(curl -s -X DELETE \
            "${SUPABASE_URL}/rest/v1/profiles?id=eq.${HEARTBEAT_ID}" \
            -H "apikey: ${SUPABASE_ANON_KEY}" \
            -H "Authorization: Bearer ${SUPABASE_ANON_KEY}" \
            -w "%{http_code}")
          
          if [[ "$DELETE_RESPONSE" == *"204"* ]] || [[ "$DELETE_RESPONSE" == *"200"* ]]; then
            echo "Temporary record deleted successfully"
          else
            echo "Delete response: $DELETE_RESPONSE"
          fi
          
          echo "Supabase heartbeat completed at $TIMESTAMP"
      
      - name: Verify connection
        env:
          SUPABASE_URL: ${{ secrets.JEOPARDY_PUBLIC_SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.JEOPARDY_PUBLIC_SUPABASE_ANON_KEY }}
        run: |
          # Simple health check
          echo "Verifying Supabase connection..."
          
          HEALTH_CHECK=$(curl -s -X GET \
            "${SUPABASE_URL}/rest/v1/profiles?select=count" \
            -H "apikey: ${SUPABASE_ANON_KEY}" \
            -H "Authorization: Bearer ${SUPABASE_ANON_KEY}" \
            -w "%{http_code}")
          
          if [[ "$HEALTH_CHECK" == *"200"* ]]; then
            echo "Supabase connection verified"
          else
            echo "Connection verification failed: $HEALTH_CHECK"
            exit 1
          fi 
